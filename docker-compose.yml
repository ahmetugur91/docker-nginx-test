version: "3"

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: php.Dockerfile
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ${APP_FOLDER}:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini`
    networks:
      - app-network

  webserver:
    image: nginx
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ${APP_FOLDER}:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  node:
    container_name: node
    image: "node:${NODE_VERSION}"
    user: "node"
    working_dir: /home/node/app
    volumes:
      - ${APP_FOLDER}:/home/node/app
    networks:
      - app-network

  redis:
    image: redis
    ports:
      - 6379:6379
    networks:
      - app-network

  db:
    container_name: db
    image: mysql:5.7.22
    ports:
      - "3306:3306"
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: app
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    ports:
      - "${PHPMYADMIN_PORT}:80"
    links:
      - db:db
    environment:
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
      UPLOAD_LIMIT: 3000000000
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local